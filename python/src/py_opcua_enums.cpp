/// @author Matthieu Bec 2014
/// @email mbec@gmto.org
/// @brief Python bindings for freeopcua.
/// @license GNU GPL
///
/// Distributed under the GNU GPL License
/// (See accompanying file LICENSE or copy at
/// http://www.gnu.org/licenses/gpl.html)
///

#include <boost/python.hpp>

#include "opc/common/object_id.h"
#include "opc/ua/protocol/attribute_ids.h"
#include "opc/ua/protocol/types.h"
#include "opc/ua/protocol/variant.h"
#include "opc/ua/protocol/view.h"

#include "py_opcua_enums.h"

using namespace boost::python;
using namespace OpcUa;

void py_opcua_enums()
{
  enum_<ObjectID>("ObjectID")
#define _value(X) value(#X, ObjectID:: X)
  ._value(Null)
  ._value(Boolean)
  ._value(SByte)
  ._value(Byte)
  ._value(Int16)
  ._value(UInt16)
  ._value(Int32)
  ._value(UInt32)
  ._value(Int64)
  ._value(UInt64)
  ._value(Float)
  ._value(Double)
  ._value(String)
  ._value(DateTime)
  ._value(Guid)
  ._value(ByteString)
  ._value(XmlElement)
  ._value(NodeId)
  ._value(ExpandedNodeId)
  ._value(StatusCode)
  ._value(QualifiedName)
  ._value(QualifiedName)
  ._value(LocalizedText)
  ._value(Structure)
  ._value(DataValue)
  ._value(BaseDataType)
  ._value(DiagnosticInfo)
  ._value(Number)
  ._value(Integer)
  ._value(UnsignedInteger)
  ._value(Enumeration)
  ._value(Image)
  ._value(References)
  ._value(NonHierarchicalReferences)
  ._value(HasChild)
  ._value(Organizes)
  ._value(HasEventSource)
  ._value(HasModellingRule)
  ._value(HasEncoding)
  ._value(HasDescription)
  ._value(HasTypeDefinition)
  ._value(GeneratesEvent)
  ._value(Aggregates)
  ._value(HasSubtype)
  ._value(HasProperty)
  ._value(HasComponent)
  ._value(HasNotifier)
  ._value(HasOrderedComponent)
  ._value(HasModelParent)
  ._value(FromState)
  ._value(ToState)
  ._value(HasCause)
  ._value(HasEffect)
  ._value(HasHistoricalConfiguration)
  ._value(HasHistoricalEventConfiguration)
  ._value(BaseObjectType)
  ._value(FolderType)
  ._value(BaseVariableType)
  ._value(BaseDataVariableType)
  ._value(PropertyType)
  ._value(DataTypeDescriptionType)
  ._value(DataTypeDictionaryType)
  ._value(DataTypeSystemType)
  ._value(DataTypeEncodingType)
  ._value(ModellingRuleType)
  ._value(ModellingRule_Mandatory)
  ._value(ModellingRule_MandatoryShared)
  ._value(ModellingRule_Optional)
  ._value(ModellingRule_CardinalityRestriction)
  ._value(ModellingRule_ExposesItsArray)
  ._value(RootFolder)
  ._value(ObjectsFolder)
  ._value(TypesFolder)
  ._value(ViewsFolder)
  ._value(ObjectTypesFolder)
  ._value(VariableTypesFolder)
  ._value(DataTypesFolder)
  ._value(ReferenceTypesFolder)
  ._value(ModellingRuleType_NamingRule)
  //._value(HasSubStateMachine)
  //._value(HasEventHistory)
  ._value(IdType)
  ._value(NodeClass)
  ._value(Duration)
  ._value(NumericRange)
  ._value(UtcTime)
  ._value(LocaleId)
  ._value(Argument)
#undef _value
  ;

  enum_<ApplicationType>("ApplicationType")
#define _value(X) value(#X, ApplicationType:: X)
  ._value(CLIENT)
  ._value(CLIENT_AND_SERVER)
  ._value(DISCOVERY_SERVER)
  ._value(SERVER)
#undef _value
  ;

  enum_<MessageSecurityMode>("MessageSecurityMode")
#define _value(X) value(#X, MessageSecurityMode:: X)
  ._value(MSM_NONE)
  ._value(MSM_SIGN)
  ._value(MSM_SIGN_AND_ENCRYPT)
#undef _value
  ;

  enum_<UserIdentifyTokenType>("UserIdentifyTokenType")
#define _value(X) value(#X, UserIdentifyTokenType:: X)
  ._value(ANONYMOUS)
  ._value(USERNAME)
  ._value(CERTIFICATE)
  ._value(ISSUED_TOKEN)
#undef _value
  ;

  enum_<BrowseDirection>("BrowseDirection")
#define _value(X) value(#X, BrowseDirection:: X)
  ._value(Both)
  ._value(Forward)
  ._value(Inverse)
#undef _value
  ;

  enum_<NodeClass>("NodeClass")
#define _value(X) value(#X, NodeClass:: X)
  ._value(All)
  ._value(Object)
  ._value(Variable)
  ._value(Method)
  ._value(ObjectType)
  ._value(VariableType)
  ._value(ReferenceType)
  ._value(DataType)
  ._value(View)
#undef _value
  ;

  enum_<TimestampsToReturn>("TimestampsToReturn")
#define _value(X) value(#X, TimestampsToReturn:: X)
  ._value(SOURCE)
  ._value(SERVER)
  ._value(BOTH)
  ._value(NEITHER)
#undef _value
  ;

  enum_<AttributeID>("AttributeID")
#define _value(X) value(#X, AttributeID:: X)
  ._value(ACCESS_LEVEL)
  ._value(ARRAY_DIMENSIONS)
  ._value(BROWSE_NAME)
  ._value(CONTAINS_NO_LOOPS)
  ._value(DATA_TYPE)
  ._value(DESCRIPTION)
  ._value(DISPLAY_NAME)
  ._value(EVENT_NOTIFIER)
  ._value(EXECUTABLE)
  ._value(HISTORIZING)
  ._value(INVERSE_NAME)
  ._value(IS_ABSTRACT)
  ._value(MINIMUM_SAMPLING_INTERVAL)
  ._value(NODE_CLASS)
  ._value(NODE_ID)
  ._value(SYMMETRIC)
  ._value(UNKNOWN)
  ._value(USER_ACCESS_LEVEL)
  ._value(USER_EXECUTABLE)
  ._value(VALUE)
  ._value(VALUE_RANK)
  ._value(WRITE_MASK)
#undef _value
  ;

  enum_<StatusCode>("StatusCode")
#define _value(X) value(#X, StatusCode:: X )
  ._value(Good)
  ._value(BadUnexpectedError)
  ._value(BadInternalError)
  ._value(BadOutOfMemory)
  ._value(BadResourceUnavailable)
  ._value(BadCommunicationError)
  ._value(BadEncodingError)
  ._value(BadDecodingError)
  ._value(BadEncodingLimitsExceeded)
  ._value(BadUnknownResponse)
  ._value(BadTimeout)
  ._value(BadServiceUnsupported)
  ._value(BadShutdown)
  ._value(BadServerNotConnected)
  ._value(BadServerHalted)
  ._value(BadNothingToDo)
  ._value(BadTooManyOperations)
  ._value(BadDataTypeIdUnknown)
  ._value(BadCertificateInvalid)
  ._value(BadSecurityChecksFailed)
  ._value(BadCertificateTimeInvalid)
  ._value(BadCertificateIssuerTimeInvalid)
  ._value(BadCertificateHostNameInvalid)
  ._value(BadCertificateUriInvalid)
  ._value(BadCertificateUseNotAllowed)
  ._value(BadCertificateIssuerUseNotAllowed)
  ._value(BadCertificateUntrusted)
  ._value(BadCertificateRevocationUnknown)
  ._value(BadCertificateIssuerRevocationUnknown)
  ._value(BadCertificateRevoked)
  ._value(BadCertificateIssuerRevoked)
  ._value(BadUserAccessDenied)
  ._value(BadIdentityTokenInvalid)
  ._value(BadIdentityTokenRejected)
  ._value(BadSecureChannelIdInvalid)
  ._value(BadInvalidTimestamp)
  ._value(BadNonceInvalid)
  ._value(BadSessionIdInvalid)
  ._value(BadSessionClosed)
  ._value(BadSessionNotActivated)
  ._value(BadSubscriptionIdInvalid)
  ._value(BadRequestHeaderInvalid)
  ._value(BadTimestampsToReturnInvalid)
  ._value(BadRequestCancelledByClient)
  ._value(GoodSubscriptionTransferred)
  ._value(GoodCompletesAsynchronously)
  ._value(GoodOverload)
  ._value(GoodClamped)
  ._value(BadNoCommunication)
  ._value(BadWaitingForInitialData)
  ._value(BadNodeIdInvalid)
  ._value(BadNodeIdUnknown)
  ._value(BadAttributeIdInvalid)
  ._value(BadIndexRangeInvalid)
  ._value(BadIndexRangeNoData)
  ._value(BadDataEncodingInvalid)
  ._value(BadDataEncodingUnsupported)
  ._value(BadNotReadable)
  ._value(BadNotWritable)
  ._value(BadOutOfRange)
  ._value(BadNotSupported)
  ._value(BadNotFound)
  ._value(BadObjectDeleted)
  ._value(BadNotImplemented)
  ._value(BadMonitoringModeInvalid)
  ._value(BadMonitoredItemIdInvalid)
  ._value(BadMonitoredItemFilterInvalid)
  ._value(BadMonitoredItemFilterUnsupported)
  ._value(BadFilterNotAllowed)
  ._value(BadStructureMissing)
  ._value(BadEventFilterInvalid)
  ._value(BadContentFilterInvalid)
  ._value(BadFilterOperandInvalid)
  ._value(BadContinuationPointInvalid)
  ._value(BadNoContinuationPoints)
  ._value(BadReferenceTypeIdInvalid)
  ._value(BadBrowseDirectionInvalid)
  ._value(BadNodeNotInView)
  ._value(BadServerUriInvalid)
  ._value(BadServerNameMissing)
  ._value(BadDiscoveryUrlMissing)
  ._value(BadSempahoreFileMissing)
  ._value(BadRequestTypeInvalid)
  ._value(BadSecurityModeRejected)
  ._value(BadSecurityPolicyRejected)
  ._value(BadTooManySessions)
  ._value(BadUserSignatureInvalid)
  ._value(BadApplicationSignatureInvalid)
  ._value(BadNoValidCertificates)
  ._value(BadRequestCancelledByRequest)
  ._value(BadParentNodeIdInvalid)
  ._value(BadReferenceNotAllowed)
  ._value(BadNodeIdRejected)
  ._value(BadNodeIdExists)
  ._value(BadNodeClassInvalid)
  ._value(BadBrowseNameInvalid)
  ._value(BadBrowseNameDuplicated)
  ._value(BadNodeAttributesInvalid)
  ._value(BadTypeDefinitionInvalid)
  ._value(BadSourceNodeIdInvalid)
  ._value(BadTargetNodeIdInvalid)
  ._value(BadDuplicateReferenceNotAllowed)
  ._value(BadInvalidSelfReference)
  ._value(BadReferenceLocalOnly)
  ._value(BadNoDeleteRights)
  ._value(BadServerIndexInvalid)
  ._value(BadViewIdUnknown)
  ._value(Uncertain_ReferenceOutOfServer)
  ._value(BadTooManyMatches)
  ._value(BadQueryTooComplex)
  ._value(BadNoMatch)
  ._value(BadMaxAgeInvalid)
  ._value(BadHistoryOperationInvalid)
  ._value(BadHistoryOperationUnsupported)
  ._value(BadWriteNotSupported)
  ._value(BadTypeMismatch)
  ._value(BadMethodInvalid)
  ._value(BadArgumentsMissing)
  ._value(BadTooManySubscriptions)
  ._value(BadTooManyPublishRequests)
  ._value(BadNoSubscription)
  ._value(BadSequenceNumberUnknown)
  ._value(BadMessageNotAvailable)
  ._value(BadInsufficientClientProfile)
  ._value(BadTcpServerTooBusy)
  ._value(BadTcpMessageTypeInvalid)
  ._value(BadTcpSecureChannelUnknown)
  ._value(BadTcpMessageTooLarge)
  ._value(BadTcpNotEnoughResources)
  ._value(BadTcpInternalError)
  ._value(BadTcpEndpointUrlInvalid)
  ._value(BadRequestInterrupted)
  ._value(BadRequestTimeout)
  ._value(BadSecureChannelClosed)
  ._value(BadSecureChannelTokenUnknown)
  ._value(BadSequenceNumberInvalid)
  ._value(BadConfigurationError)
  ._value(BadNotConnected)
  ._value(BadDeviceFailure)
  ._value(BadSensorFailure)
  ._value(BadOutOfService)
  ._value(BadDeadbandFilterInvalid)
  ._value(Uncertain_NoCommunicationLastUsableValue)
  ._value(Uncertain_LastUsableValue)
  ._value(Uncertain_SubstituteValue)
  ._value(Uncertain_InitialValue)
  ._value(Uncertain_SensorNotAccurate)
  ._value(Uncertain_EngineeringUnitsExceeded)
  ._value(Uncertain_SubNormal)
  ._value(GoodLocalOverride)
  ._value(BadRefreshInProgress)
  ._value(BadConditionAlreadyDisabled)
  ._value(BadConditionDisabled)
  ._value(BadEventIdUnknown)
  ._value(BadNoData)
  ._value(BadNoBound)
  ._value(BadDataLost)
  ._value(BadDataUnavailable)
  ._value(BadEntryExists)
  ._value(BadNoEntryExists)
  ._value(BadTimestampNotSupported)
  ._value(GoodEntryInserted)
  ._value(GoodEntryReplaced)
  ._value(Uncertain_DataSubNormal)
  ._value(GoodNoData)
  ._value(GoodMoreData)
  ._value(GoodCommunicationEvent)
  ._value(GoodShutdownEvent)
  ._value(GoodCallAgain)
  ._value(GoodNonCriticalTimeout)
  ._value(BadInvalidArgument)
  ._value(BadConnectionRejected)
  ._value(BadDisconnect)
  ._value(BadConnectionClosed)
  ._value(BadInvalidState)
  ._value(BadEndOfStream)
  ._value(BadNoDataAvailable)
  ._value(BadWaitingForResponse)
  ._value(BadOperationAbandoned)
  ._value(BadExpectedStreamToBlock)
  ._value(BadWouldBlock)
  ._value(BadSyntaxError)
  ._value(BadMaxConnectionsReached)
  ._value(BadRequestTooLarge)
  ._value(BadResponseTooLarge)
  ._value(GoodResultsMayBeIncomplete)
  ._value(BadEventNotAcknowledgeable)
  ._value(Uncertain_ReferenceNotDeleted)
  ._value(BadInvalidTimestampArgument)
  ._value(BadProtocolVersionUnsupported)
  ._value(BadStateNotActive)
  ._value(Uncertain_NotAllNodesAvailable)
  ._value(BadFilterOperatorInvalid)
  ._value(BadFilterOperatorUnsupported)
  ._value(BadFilterOperandCountMismatch)
  ._value(BadFilterElementInvalid)
  ._value(BadFilterLiteralInvalid)
  ._value(BadIdentityChangeNotSupported)
  ._value(BadNotTypeDefinition)
  ._value(BadViewTimestampInvalid)
  ._value(BadViewParameterMismatch)
  ._value(BadViewVersionInvalid)
  ._value(BadConditionAlreadyEnabled)
  ._value(BadDialogNotActive)
  ._value(BadDialogResponseInvalid)
  ._value(BadConditionBranchAlreadyAcked)
  ._value(BadConditionBranchAlreadyConfirmed)
  ._value(BadConditionAlreadyShelved)
  ._value(BadConditionNotShelved)
  ._value(BadShelvingTimeOutOfRange)
#undef _value
  ;

  enum_<VariantType>("VariantType")
#define _value(X) value(#X, VariantType:: X )
  ._value(NUL)
  ._value(BOOLEAN)
  ._value(SBYTE)
  ._value(BYTE)
  ._value(INT16)
  ._value(UINT16)
  ._value(INT32)
  ._value(UINT32)
  ._value(INT64)
  ._value(UINT64)
  ._value(FLOAT)
  ._value(DOUBLE)
  ._value(STRING)
  ._value(DATE_TIME)
  ._value(GUID)
  ._value(BYTE_STRING)
  ._value(XML_ELEMENT)
  ._value(NODE_ID)
  ._value(EXPANDED_NODE_ID)
  ._value(STATUS_CODE)
  ._value(QUALIFIED_NAME)
  ._value(LOCALIZED_TEXT)
  ._value(EXTENSION_OBJECT)
  ._value(DATA_VALUE)
  ._value(VARIANT)
  ._value(DIAGNOSTIC_INFO)
#undef _value
  ;
}

